# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript


pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: CI
    variables:
      - group: HML
      - name: ENV
        value: HML
    displayName: Continuous Integration
    jobs:
    - job: build
      displayName: Build Terraform Artfacts
      steps:
      - task: TerraformInstaller@1
        inputs:
          terraformVersion: 'latest'
      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: '$(Build.SourcesDirectory)/dist'
          archiveType: 'zip'
          archiveFile: '$(Build.ArtifactStagingDirectory)/terraform.zip' 
      - task: PublishPipelineArtifact@1
        inputs:
          artifactName: bucket-pdf-service
          targetPath: '$(Build.ArtifactStagingDirectory)'
          publishLocation: 'pipeline'
        displayName: 'Publish npm artifact'
  - stage: HML
    variables:
      - group: HML
      - name: HML
        value: HML
    jobs:
    - deployment: Deploy
      displayName: 'Deploy HML'
      pool:
        vmImage: 'ubuntu-latest'
      environment: 'HML'
      strategy:
        runOnce:
          deploy:
            steps:
            - checkout: self
            - task: DownloadPipelineArtifact@2
              inputs:
                artifactName: 'bucket-pdf-service'
                targetPath: '$(Build.SourcesDirectory)/terraform'
              displayName: 'Downloads'
            - task: TerraformInstaller@1
              inputs:
                terraformVersion: 'latest'
            
            - script: |
                export AWS_ACCESS_KEY_ID=$(AWS_ACCESS_KEY_ID)
                export AWS_SECRET_ACCESS_KEY=$(AWS_SECRET_ACCESS_KEY)
                export AWS_DEFAULT_REGION=$(AWS_DEFAULT_REGION)
                export TF_VAR_AWS_IAM_USER_KEY=$(AWS_ACCESS_KEY_ID)
                export TF_VAR_AWS_IAM_USER_SECRET_KEY=$(AWS_SECRET_ACCESS_KEY)
                cd terraform
                terraform init
                terraform workspace select -or-create dev
                terraform plan -var-file=./tfvars/dev.tfvars
                terraform apply -var-file=./tfvars/dev.tfvars -auto-approve
